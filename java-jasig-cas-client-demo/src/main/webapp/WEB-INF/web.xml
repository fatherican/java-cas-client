<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 version="3.0">

<display-name>Demo webapp protected by the Java Jasig / Apereo CAS client</display-name>

	<!--<context-param>-->
		<!--<param-name>renew</param-name>-->
		<!--<param-value>true</param-value>-->
	<!--</context-param>-->


	<!--cas server服务器项目地址-->
	<context-param>
		<param-name>casServerUrl</param-name>
		<param-value>https://cas.com:8443/cas</param-value>
	</context-param>
	<!--业务系统服务器项目地址-->
	<context-param>
		<param-name>bussinessServerUrl</param-name>
		<param-value>http://client1.com:8081/client</param-value>
	</context-param>
	<!--从casServer获取验证码URL-->
	<context-param>
		<param-name>casServerCaptchaUrl</param-name>
		<param-value>https://cas.com:8443/cas/login/getCaptcha</param-value>
	</context-param>




	<!-- Filter to handle logout requests sent directly by the CAS server -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://cas.com:8443/cas</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Listener to clean sessions -->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener
		</listener-class>
	</listener>

	<!-- Define the protected urls of your application -->
	<!-- #### change with your own CAS server and your host name #### -->
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://cas.com:8443/cas/login
			</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://client1.com:8081</param-value>
		</init-param>

	</filter>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/protected/*</url-pattern>
	</filter-mapping>

	<!-- Define the urls on which you can validate a service ticket -->
	<!-- #### change with your own CAS server and your host name #### -->
	<!--为了能让web 的原生Filter类注入Spring 对象，此处使用代理的方式来处理，filer的初始化依然依托于WEB容器而不依赖于-->
	<!--spring容器，这样就可以达到init 和 destory 依然由 web容器管理-->
	<!--org.jasig.cas.client.validation.Cas30ProxyReceivingTicketValidationFilter-->
	<filter>
		<filter-name>CasValidationFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://cas.com:8443/cas</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://client1.com:8081</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CasValidationFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

	<!--从cookie或request获取用户信息-->
	<filter>
		<filter-name>UserInfoThreadLocalFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UserInfoThreadLocalFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 重新包装request，使其支持remoteUser等方法-->
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServleUsertRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>






	<!--验证登录结果，如果登录成功则初始化Session到本地，否则提示失败原因-->
	<servlet>
		<servlet-name>validateLogin</servlet-name>
		<servlet-class>org.jasig.cas.client.servlet.ValidateLoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>validateLogin</servlet-name>
		<url-pattern>/validateLogin</url-pattern>
	</servlet-mapping>





	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>*.sso</url-pattern>
	</servlet-mapping>
	
	
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	




	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>






</web-app>
